<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='StatewiseTestingDetails' inline='true' name='federated.01eo9so1egpibb1a9t6em1w2ch5j' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='StatewiseTestingDetails' name='textscan.1r24old0poo38h161bn051c85goa'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Mytableau/practice/Covid-19/Kaggle/StatewiseTestingDetails.csv' dataRefreshTime='' directory='C:/Mytableau/practice/Covid-19/Kaggle' filename='C:/Users/HP/AppData/Local/Temp/TableauTemp/0y4ad080truij0180gop21tr2lca/StatewiseTestingDetails.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1r24old0poo38h161bn051c85goa' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:E609:no:A1:E609:1' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='TotalSamples' ordinal='2' />
            <column datatype='integer' name='Negative' ordinal='3' />
            <column datatype='integer' name='Positive' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalSamples]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E609:no:A1:E609:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>2177</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Samples' datatype='integer' name='[TotalSamples]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.41954' measure-ordering='alphabetic' measure-percentage='0.58046' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Daily tested in different states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StatewiseTestingDetails' name='federated.01eo9so1egpibb1a9t6em1w2ch5j' />
          </datasources>
          <datasource-dependencies datasource='federated.01eo9so1egpibb1a9t6em1w2ch5j'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Samples' datatype='integer' name='[TotalSamples]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[tdy:Date:qk]' value='bold' />
            <format attr='font-size' field='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[none:State:nk]' value='10' />
            <format attr='font-weight' field='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[none:State:nk]' value='bold' />
            <format attr='font-size' field='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[tdy:Date:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[sum:Positive:qk]' />
              <lod column='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[sum:TotalSamples:qk]' />
              <lod column='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[sum:Negative:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01eo9so1egpibb1a9t6em1w2ch5j].[tdy:Date:qk]</rows>
        <cols>[federated.01eo9so1egpibb1a9t6em1w2ch5j].[none:State:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01eo9so1egpibb1a9t6em1w2ch5j].[sum:Positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01eo9so1egpibb1a9t6em1w2ch5j].[none:State:nk]</field>
            <field>[federated.01eo9so1egpibb1a9t6em1w2ch5j].[tdy:Date:qk]</field>
            <field>[federated.01eo9so1egpibb1a9t6em1w2ch5j].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      agXWc6HwzAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
